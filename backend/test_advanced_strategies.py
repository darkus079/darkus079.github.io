"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π PDF –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
"""

import os
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from advanced_pdf_strategies import AdvancedPDFExtractor, ControlledHTTPStrategy
from playwright_integration import PlaywrightPDFExtractorSync

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_controlled_http_strategy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
        test_dir = "test_files"
        os.makedirs(test_dir, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä
        strategy = ControlledHTTPStrategy(test_dir)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        case_url = "https://kad.arbitr.ru/Card/12345"
        html_content = """
        <html>
            <body>
                <a href="/Document/Pdf/12345">–°–∫–∞—á–∞—Ç—å PDF</a>
                <a href="https://kad.arbitr.ru/Document/GetPdf/12345">–°–∫–∞—á–∞—Ç—å PDF 2</a>
            </body>
        </html>
        """
        cookies = [
            {"name": "session_id", "value": "test123", "domain": "kad.arbitr.ru", "path": "/"},
            {"name": "auth_token", "value": "token456", "domain": "kad.arbitr.ru", "path": "/"}
        ]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ URL
        pdf_urls = strategy.find_pdf_urls_in_html(html_content, case_url)
        logger.info(f"üìÑ –ù–∞–π–¥–µ–Ω–æ PDF URL: {pdf_urls}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É cookies
        strategy.set_cookies_from_browser(cookies)
        
        logger.info("‚úÖ –¢–µ—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTTP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {e}")
        return False

def test_playwright_strategy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
        test_dir = "test_files"
        os.makedirs(test_dir, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä
        extractor = PlaywrightPDFExtractorSync(test_dir)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π URL (–Ω–µ —Ä–µ–∞–ª—å–Ω—ã–π, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
        test_url = "https://kad.arbitr.ru/Card/12345"
        
        logger.info("‚úÖ –¢–µ—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω (—Ç–æ–ª—å–∫–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è)")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞: {e}")
        return False

def test_advanced_extractor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
        test_dir = "test_files"
        os.makedirs(test_dir, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä
        extractor = AdvancedPDFExtractor(test_dir)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        case_url = "https://kad.arbitr.ru/Card/12345"
        html_content = """
        <html>
            <body>
                <a href="/Document/Pdf/12345">–°–∫–∞—á–∞—Ç—å PDF</a>
            </body>
        </html>
        """
        cookies = [
            {"name": "session_id", "value": "test123", "domain": "kad.arbitr.ru", "path": "/"}
        ]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        http_files = extractor.extract_with_controlled_http(case_url, html_content, cookies)
        logger.info(f"üìÑ HTTP —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: {len(http_files)} —Ñ–∞–π–ª–æ–≤")
        
        logger.info("‚úÖ –¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π PDF –∏–∑–≤–ª–µ—á–µ–Ω–∏—è")
    
    tests = [
        ("–£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã", test_controlled_http_strategy),
        ("–ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞", test_playwright_strategy),
        ("–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä", test_advanced_extractor)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        logger.info(f"\n{'='*50}")
        logger.info(f"–¢–µ—Å—Ç: {test_name}")
        logger.info(f"{'='*50}")
        
        if test_func():
            passed += 1
            logger.info(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
        else:
            logger.error(f"‚ùå {test_name} - –ü–†–û–í–ê–õ–ï–ù")
    
    logger.info(f"\n{'='*50}")
    logger.info(f"–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    logger.info(f"{'='*50}")
    
    if passed == total:
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        logger.error("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

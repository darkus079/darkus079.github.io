#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import tempfile
import shutil
from fastapi.testclient import TestClient
from app import app

def test_real_application_flow():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üß™ –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (–∫–∞–∫ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞)
    test_files = [
        "–ê84-4753_2024_20251003_180941_1_A84-4753-2024_20240613_Opredelenie.pdf",
        "–ê84-4753_2024_20251003_180941_2_A84-4753-2024_20240805_Reshenija_i_postanovlenija.pdf"
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("files", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    for filename in test_files:
        file_path = os.path.join("files", filename)
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(f"Test PDF content for {filename}")
        print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {filename}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    client = TestClient(app)
    
    # 1. –°–∏–º—É–ª–∏—Ä—É–µ–º parseCase() - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\nüì° –°–∏–º—É–ª—è—Ü–∏—è parseCase()...")
    response = client.get("/api/files")
    print(f"üìä –°—Ç–∞—Ç—É—Å /api/files: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"üìÅ –î–∞–Ω–Ω—ã–µ –æ—Ç API: {data}")
        
        # 2. –°–∏–º—É–ª–∏—Ä—É–µ–º getFilesList() - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç—ã
        print("\nüîÑ –°–∏–º—É–ª—è—Ü–∏—è getFilesList()...")
        files = []
        for fileName in data['files']:
            print(f"   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {fileName} (—Ç–∏–ø: {type(fileName)})")
            
            if isinstance(fileName, str):
                file_obj = {
                    'name': fileName,
                    'size': 0,
                    'url': f"http://127.0.0.1:8000/api/download/{fileName}",
                    'created': "2025-10-03T18:00:00.000Z",
                    'modified': "2025-10-03T18:00:00.000Z"
                }
                files.append(file_obj)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞: {file_obj}")
            else:
                print(f"   ‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π: {type(fileName)}")
        
        print(f"üìÅ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {files}")
        
        # 3. –°–∏–º—É–ª–∏—Ä—É–µ–º showSuccessPage() - —Å–æ–∑–¥–∞–Ω–∏–µ HTML
        print("\nüé® –°–∏–º—É–ª—è—Ü–∏—è showSuccessPage()...")
        if files and len(files) > 0:
            for i, file in enumerate(files):
                print(f"   –§–∞–π–ª {i}: {file}")
                print(f"   –¢–∏–ø —Ñ–∞–π–ª–∞ {i}: {type(file)}")
                
                if isinstance(file, dict) and 'name' in file and 'url' in file:
                    print(f"   ‚úÖ –§–∞–π–ª {i} –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
                    
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ HTML –∫–Ω–æ–ø–∫–∏
                    filename = file['name']
                    url = file['url']
                    
                    print(f"   üìù –°–æ–∑–¥–∞–µ–º HTML –∫–Ω–æ–ø–∫—É:")
                    print(f"   data-filename='{filename}'")
                    print(f"   data-url='{url}'")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ filename –∏ url —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏
                    if isinstance(filename, str) and isinstance(url, str):
                        print(f"   ‚úÖ filename –∏ url —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                        
                        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ - –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
                        print(f"   üñ±Ô∏è –°–∏–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ...")
                        print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π filename: {filename} (—Ç–∏–ø: {type(filename)})")
                        print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π url: {url} (—Ç–∏–ø: {type(url)})")
                        
                        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ downloadFile()
                        print(f"   üì• –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–∑–æ–≤–∞ downloadFile('{filename}', '{url}')")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏
                        if isinstance(filename, str) and isinstance(url, str):
                            print(f"   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã downloadFile —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                            
                            # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                            import urllib.parse
                            encoded_filename = urllib.parse.quote(filename)
                            download_url = f"/api/download/{encoded_filename}"
                            
                            print(f"   üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
                            
                            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
                            response = client.get(download_url)
                            print(f"   üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
                            
                            if response.status_code == 200:
                                print(f"   ‚úÖ –§–∞–π–ª {i} —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
                            else:
                                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ {i}: {response.status_code}")
                                print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                        else:
                            print(f"   ‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã downloadFile –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                    else:
                        print(f"   ‚ùå filename –∏–ª–∏ url –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                else:
                    print(f"   ‚ùå –§–∞–π–ª {i} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
        else:
            print("‚ùå –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—É—Å—Ç")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {response.status_code}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    for filename in test_files:
        file_path = os.path.join("files", filename)
        if os.path.exists(file_path):
            os.remove(file_path)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {filename}")
    
    return response.status_code == 200

def test_object_object_scenario():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ [object Object]"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è [object Object]...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_filename = "test_object_scenario.pdf"
    test_file_path = os.path.join("files", test_filename)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("files", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content for object scenario")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ [object Object]
    client = TestClient(app)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    response = client.get("/api/files")
    if response.status_code == 200:
        data = response.json()
        files = data['files']
        
        print(f"üìÅ –§–∞–π–ª—ã –æ—Ç API: {files}")
        
        # 2. –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É - –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏
        print("\n‚ö†Ô∏è –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–∫–∏ - –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏...")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞
        file_obj = {
            'name': test_filename,
            'size': 0,
            'url': f"http://127.0.0.1:8000/api/download/{test_filename}",
            'created': "2025-10-03T18:00:00.000Z",
            'modified': "2025-10-03T18:00:00.000Z"
        }
        
        print(f"üìÅ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞: {file_obj}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É - –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤ downloadFile
        print(f"üñ±Ô∏è –°–∏–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏...")
        
        # –≠—Ç–æ —Ç–æ, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        filename = file_obj  # –û–®–ò–ë–ö–ê: –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏
        url = file_obj['url']   # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å
        
        print(f"‚ùå filename (–æ–±—ä–µ–∫—Ç): {filename} (—Ç–∏–ø: {type(filename)})")
        print(f"‚úÖ url (—Å—Ç—Ä–æ–∫–∞): {url} (—Ç–∏–ø: {type(url)})")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ downloadFile
        print(f"üì• –°–∏–º—É–ª—è—Ü–∏—è downloadFile —Å –æ–±—ä–µ–∫—Ç–æ–º...")
        
        # –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
        try:
            # –≠—Ç–æ —Ç–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ HTML: data-filename="${file.name}"
            # –ï—Å–ª–∏ file.name —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º, —Ç–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è data-filename="[object Object]"
            html_filename = str(filename)  # –≠—Ç–æ –¥–∞—Å—Ç "[object Object]"
            print(f"üìù HTML filename: {html_filename}")
            
            # –ü—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–∞
            extracted_filename = html_filename  # –≠—Ç–æ –±—É–¥–µ—Ç "[object Object]"
            print(f"üîç –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π filename: {extracted_filename}")
            
            # –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ URL
            import urllib.parse
            encoded_filename = urllib.parse.quote(extracted_filename)
            download_url = f"/api/download/{encoded_filename}"
            
            print(f"üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
            response = client.get(download_url)
            print(f"üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
            
            if response.status_code == 200:
                print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏: {e}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(test_file_path):
        os.remove(test_file_path)
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n")
    
    # –¢–µ—Å—Ç 1: –†–µ–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    success1 = test_real_application_flow()
    
    # –¢–µ—Å—Ç 2: –°—Ü–µ–Ω–∞—Ä–∏–π [object Object]
    success2 = test_object_object_scenario()
    
    if success1 and success2:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å [object Object] –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω–∞!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")

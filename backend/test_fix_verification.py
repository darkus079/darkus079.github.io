#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
"""

import os
import tempfile
import shutil
from fastapi.testclient import TestClient
from app import app, FILES_DIR

def test_files_directory_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ files"""
    print("üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ files...")
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(FILES_DIR):
        shutil.rmtree(FILES_DIR)
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø–∞–ø–∫–∞: {FILES_DIR}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TestClient(app)
    
    # –í—ã–∑—ã–≤–∞–µ–º lifespan startup
    with client:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å
        if os.path.exists(FILES_DIR):
            print(f"‚úÖ –ü–∞–ø–∫–∞ files —Å–æ–∑–¥–∞–Ω–∞: {FILES_DIR}")
            return True
        else:
            print(f"‚ùå –ü–∞–ø–∫–∞ files –Ω–µ —Å–æ–∑–¥–∞–Ω–∞: {FILES_DIR}")
            return False

def test_file_operations():
    """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_filename = "test_file.pdf"
    test_file_path = os.path.join(FILES_DIR, test_filename)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(FILES_DIR, exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é TestClient
    client = TestClient(app)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("üìã –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    response = client.get("/api/files")
    print(f"üìä –°—Ç–∞—Ç—É—Å /api/files: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"üìÅ –û—Ç–≤–µ—Ç API: {data}")
        
        if 'files' in data and test_filename in data['files']:
            print("‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {response.status_code}")
        return False
    
    # –¢–µ—Å—Ç 2: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    print("‚¨áÔ∏è –¢–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞...")
    import urllib.parse
    encoded_filename = urllib.parse.quote(test_filename)
    download_url = f"/api/download/{encoded_filename}"
    
    print(f"üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
    
    response = client.get(download_url)
    print(f"üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
    
    if response.status_code == 200:
        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        return False

def test_cyrillic_filenames():
    """–¢–µ—Å—Ç —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º –∏–º–µ–Ω–µ–º
    test_filename = "—Ç–µ—Å—Ç_—Ñ–∞–π–ª_–∫–∏—Ä–∏–ª–ª–∏—Ü–∞.pdf"
    test_file_path = os.path.join(FILES_DIR, test_filename)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content with Cyrillic filename")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é TestClient
    client = TestClient(app)
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    response = client.get("/api/files")
    if response.status_code == 200:
        data = response.json()
        if 'files' in data and test_filename in data['files']:
            print("‚úÖ –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
        else:
            print("‚ùå –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {response.status_code}")
        return False
    
    # –¢–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞
    import urllib.parse
    encoded_filename = urllib.parse.quote(test_filename)
    download_url = f"/api/download/{encoded_filename}"
    
    print(f"üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞: {download_url}")
    
    response = client.get(download_url)
    print(f"üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞: {response.status_code}")
    
    if response.status_code == 200:
        print("‚úÖ –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        return False

def test_object_object_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã [object Object]"""
    print("\nüß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã [object Object]...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Å [object Object]
    client = TestClient(app)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å [object Object]
    object_object_url = "/api/download/%5Bobject%20Object%5D"
    print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Å [object Object]: {object_object_url}")
    
    response = client.get(object_object_url)
    print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 404 –¥–ª—è [object Object]")
        return True
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è [object Object]: {response.status_code}")
        return False

def cleanup_test_files():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    if os.path.exists(FILES_DIR):
        for filename in os.listdir(FILES_DIR):
            if filename.startswith("test_"):
                file_path = os.path.join(FILES_DIR, filename)
                if os.path.isfile(file_path):
                    os.remove(file_path)
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {filename}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤\n")
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ files
    success1 = test_files_directory_creation()
    
    # –¢–µ—Å—Ç 2: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏
    success2 = test_file_operations()
    
    # –¢–µ—Å—Ç 3: –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    success3 = test_cyrillic_filenames()
    
    # –¢–µ—Å—Ç 4: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ [object Object]
    success4 = test_object_object_fix()
    
    # –û—á–∏—Å—Ç–∫–∞
    cleanup_test_files()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ files: {'–ü–†–û–ô–î–ï–ù' if success1 else '–ü–†–û–í–ê–õ–ï–ù'}")
    print(f"‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏: {'–ü–†–û–ô–î–ï–ù' if success2 else '–ü–†–û–í–ê–õ–ï–ù'}")
    print(f"‚úÖ –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –∏–º–µ–Ω–∞: {'–ü–†–û–ô–î–ï–ù' if success3 else '–ü–†–û–í–ê–õ–ï–ù'}")
    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ [object Object]: {'–ü–†–û–ô–î–ï–ù' if success4 else '–ü–†–û–í–ê–õ–ï–ù'}")
    
    if all([success1, success2, success3, success4]):
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    else:
        print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")

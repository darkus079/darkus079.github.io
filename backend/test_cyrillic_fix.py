#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ –∏–º–µ–Ω–∞—Ö —Ñ–∞–π–ª–æ–≤
"""

import os
import urllib.parse
import tempfile
import shutil
from fastapi.testclient import TestClient
from app import app

def test_cyrillic_filename_download():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ –∏–º–µ–Ω–∞—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º –∏–º–µ–Ω–µ–º
    test_filename = "–ê84-4753_2024_—Ç–µ—Å—Ç_–¥–æ–∫—É–º–µ–Ω—Ç.pdf"
    test_file_path = os.path.join("files", test_filename)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("files", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content with Cyrillic filename")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é TestClient
    client = TestClient(app)
    
    # URL-encode –∏–º—è —Ñ–∞–π–ª–∞ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä)
    encoded_filename = urllib.parse.quote(test_filename)
    print(f"üîó URL-encoded –∏–º—è —Ñ–∞–π–ª–∞: {encoded_filename}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç
    response = client.get(f"/api/download/{encoded_filename}")
    
    print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
        print(f"üìÅ Content-Type: {response.headers.get('content-type')}")
        print(f"üìÅ Content-Disposition: {response.headers.get('content-disposition')}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(response.content)} –±–∞–π—Ç")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(test_file_path):
        os.remove(test_file_path)
        print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    
    return response.status_code == 200

def test_cyrillic_to_latin_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤...")
    
    cyrillic_to_latin = {
        '–ê': 'A', '–í': 'B', '–ï': 'E', '–ö': 'K', '–ú': 'M', '–ù': 'H', '–û': 'O', 
        '–†': 'P', '–°': 'C', '–¢': 'T', '–£': 'Y', '–•': 'X', '–∞': 'a', '–≤': 'b', 
        '–µ': 'e', '–∫': 'k', '–º': 'm', '–Ω': 'h', '–æ': 'o', '—Ä': 'p', '—Å': 'c', 
        '—Ç': 't', '—É': 'y', '—Ö': 'x'
    }
    
    test_cases = [
        "–ê84-4753_2024_—Ç–µ—Å—Ç",
        "–†–µ—à–µ–Ω–∏–µ_–ø–æ_–¥–µ–ª—É",
        "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_—Å—É–¥—å–∏",
        "–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ_–∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–≥–æ_—Å—É–¥–∞"
    ]
    
    for test_case in test_cases:
        safe_filename = test_case
        for cyr, lat in cyrillic_to_latin.items():
            safe_filename = safe_filename.replace(cyr, lat)
        
        print(f"   {test_case} -> {safe_filename}")
    
    print("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")

def test_url_encoding():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    test_filenames = [
        "–ê84-4753_2024_—Ç–µ—Å—Ç.pdf",
        "–†–µ—à–µ–Ω–∏–µ_–ø–æ_–¥–µ–ª—É_‚Ññ123.pdf",
        "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ_—Å—É–¥—å–∏_–ò–≤–∞–Ω–æ–≤–∞.pdf"
    ]
    
    for filename in test_filenames:
        encoded = urllib.parse.quote(filename)
        decoded = urllib.parse.unquote(encoded)
        
        print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: {filename}")
        print(f"   –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω: {encoded}")
        print(f"   –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω: {decoded}")
        print(f"   –°–æ–≤–ø–∞–¥–∞–µ—Ç: {filename == decoded}")
        print()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤\n")
    
    # –¢–µ—Å—Ç 1: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
    test_cyrillic_to_latin_conversion()
    
    # –¢–µ—Å—Ç 2: URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_url_encoding()
    
    # –¢–µ—Å—Ç 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º –∏–º–µ–Ω–µ–º
    success = test_cyrillic_filename_download()
    
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")

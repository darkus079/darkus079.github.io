#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å [object Object] - –¥–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
"""

import os
import tempfile
import shutil
from fastapi.testclient import TestClient
from app import app

def test_api_files_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/files"""
    print("üß™ –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/files...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_filename = "test_object_debug.pdf"
    test_file_path = os.path.join("files", test_filename)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("files", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content for object debug")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é TestClient
    client = TestClient(app)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç /api/files
    response = client.get("/api/files")
    print(f"üìä –°—Ç–∞—Ç—É—Å /api/files: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"üìÅ –û—Ç–≤–µ—Ç API: {data}")
        print(f"üìÅ –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: {type(data)}")
        print(f"üìÅ –ö–ª—é—á–∏: {list(data.keys()) if isinstance(data, dict) else '–ù–µ —Å–ª–æ–≤–∞—Ä—å'}")
        
        if 'files' in data:
            files = data['files']
            print(f"üìÅ –§–∞–π–ª—ã: {files}")
            print(f"üìÅ –¢–∏–ø —Ñ–∞–π–ª–æ–≤: {type(files)}")
            print(f"üìÅ –î–ª–∏–Ω–∞ —Ñ–∞–π–ª–æ–≤: {len(files) if isinstance(files, list) else '–ù–µ —Å–ø–∏—Å–æ–∫'}")
            
            if isinstance(files, list) and len(files) > 0:
                for i, file in enumerate(files):
                    print(f"üìÅ –§–∞–π–ª {i}: {file} (—Ç–∏–ø: {type(file)})")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π
                    if isinstance(file, str):
                        print(f"   ‚úÖ –§–∞–π–ª {i} —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π")
                        
                        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                        import urllib.parse
                        encoded_filename = urllib.parse.quote(file)
                        download_url = f"/api/download/{encoded_filename}"
                        
                        print(f"   üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
                        
                        response = client.get(download_url)
                        print(f"   üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
                        
                        if response.status_code == 200:
                            print(f"   ‚úÖ –§–∞–π–ª {i} —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
                        else:
                            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ {i}: {response.status_code}")
                            print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                    else:
                        print(f"   ‚ùå –§–∞–π–ª {i} –ù–ï —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π: {type(file)}")
            else:
                print("‚ùå –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º")
        else:
            print("‚ùå –ö–ª—é—á 'files' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(test_file_path):
        os.remove(test_file_path)
        print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    
    return response.status_code == 200

def test_simulate_frontend_behavior():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ frontend"""
    print("\nüß™ –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è frontend...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_filename = "test_frontend_simulation.pdf"
    test_file_path = os.path.join("files", test_filename)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs("files", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(test_file_path, "w", encoding="utf-8") as f:
        f.write("Test PDF content for frontend simulation")
    
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_filename}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É frontend
    client = TestClient(app)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (–∫–∞–∫ –≤ getFilesList())
    response = client.get("/api/files")
    print(f"üìä –°—Ç–∞—Ç—É—Å /api/files: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"üìÅ –î–∞–Ω–Ω—ã–µ –æ—Ç API: {data}")
        
        # 2. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π frontend (–∫–∞–∫ –≤ getFilesList())
        files = []
        for fileName in data['files']:
            print(f"   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {fileName} (—Ç–∏–ø: {type(fileName)})")
            
            if isinstance(fileName, str):
                file_obj = {
                    'name': fileName,
                    'size': 0,
                    'url': f"http://127.0.0.1:8000/api/download/{fileName}",
                    'created': "2025-10-03T18:00:00.000Z",
                    'modified': "2025-10-03T18:00:00.000Z"
                }
                files.append(file_obj)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞: {file_obj}")
            else:
                print(f"   ‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π: {type(fileName)}")
        
        print(f"üìÅ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {files}")
        print(f"üìÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
        
        # 3. –°–∏–º—É–ª–∏—Ä—É–µ–º showSuccessPage
        if files and len(files) > 0:
            print("üìÅ –°–∏–º—É–ª—è—Ü–∏—è showSuccessPage...")
            for i, file in enumerate(files):
                print(f"   –§–∞–π–ª {i}: {file}")
                print(f"   –¢–∏–ø —Ñ–∞–π–ª–∞ {i}: {type(file)}")
                print(f"   name: {file.get('name')} (—Ç–∏–ø: {type(file.get('name'))})")
                print(f"   url: {file.get('url')} (—Ç–∏–ø: {type(file.get('url'))})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                if isinstance(file, dict) and 'name' in file and 'url' in file:
                    print(f"   ‚úÖ –§–∞–π–ª {i} –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
                    
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    filename = file['name']
                    url = file['url']
                    
                    print(f"   üìù –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å data-filename='{filename}' data-url='{url}'")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ filename –∏ url —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏
                    if isinstance(filename, str) and isinstance(url, str):
                        print(f"   ‚úÖ filename –∏ url —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                        
                        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
                        import urllib.parse
                        encoded_filename = urllib.parse.quote(filename)
                        download_url = f"/api/download/{encoded_filename}"
                        
                        print(f"   üîó URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
                        
                        response = client.get(download_url)
                        print(f"   üìä –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
                        
                        if response.status_code == 200:
                            print(f"   ‚úÖ –§–∞–π–ª {i} —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!")
                        else:
                            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ {i}: {response.status_code}")
                    else:
                        print(f"   ‚ùå filename –∏–ª–∏ url –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–∞–º–∏")
                else:
                    print(f"   ‚ùå –§–∞–π–ª {i} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
        else:
            print("‚ùå –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—É—Å—Ç")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {response.status_code}")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(test_file_path):
        os.remove(test_file_path)
        print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    
    return response.status_code == 200

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å [object Object]\n")
    
    # –¢–µ—Å—Ç 1: –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    success1 = test_api_files_detailed()
    
    # –¢–µ—Å—Ç 2: –°–∏–º—É–ª—è—Ü–∏—è frontend
    success2 = test_simulate_frontend_behavior()
    
    if success1 and success2:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å [object Object] –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω–∞!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")

/**
 * –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –ø–∞—Ä—Å–µ—Ä kad.arbitr.ru –¥–ª—è GitHub Pages
 * –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏
 */

class ClientKadArbitrParser {
  constructor() {
    this.isProcessing = false;
    this.downloadedFiles = [];
    this.progressCallback = null;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–µ–ª–∞
   */
  async parseCase(caseNumber, progressCallback) {
    if (this.isProcessing) {
      throw new Error('–ü–∞—Ä—Å–µ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!');
    }

    this.isProcessing = true;
    this.progressCallback = progressCallback;
    this.downloadedFiles = [];

    console.log(`üöÄ –ù–ê–ß–ê–õ–û –ü–ê–†–°–ò–ù–ì–ê: ${caseNumber}`);

    try {
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this.downloadedFiles = [];

      // –≠—Ç–∞–ø 1: –ü–æ–∏—Å–∫ –¥–µ–ª–∞
      if (progressCallback) progressCallback('–ü–æ–∏—Å–∫ –¥–µ–ª–∞ –Ω–∞ kad.arbitr.ru...');
      await this.delay(1000);

      // –≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      if (progressCallback) progressCallback('–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞...');
      await this.delay(1000);

      // –≠—Ç–∞–ø 3: –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
      if (progressCallback) progressCallback('–ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
      await this.delay(1000);

      // –≠—Ç–∞–ø 4: –°–æ–∑–¥–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–æ–≤
      if (progressCallback) progressCallback('–°–æ–∑–¥–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–æ–≤...');
      await this.delay(1000);

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ PDF —Ñ–∞–π–ª—ã
      const downloadedFiles = await this.createMockFiles(caseNumber);

      if (downloadedFiles.length === 0) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–æ–≤. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã.');
      }

      console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${downloadedFiles.length}`);
      return downloadedFiles;

    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
      
      // –ë–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
      let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ';
      
      if (error.message.includes('—Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–æ–≤')) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É –±—Ä–∞—É–∑–µ—Ä–∞.';
      } else if (error.message.includes('Blob')) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤. –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ Blob –æ–±—ä–µ–∫—Ç–æ–≤.';
      } else if (error.message.includes('URL.createObjectURL')) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞.';
      } else if (error.message.includes('—É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')) {
        errorMessage = '–ü–∞—Ä—Å–µ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.';
      } else {
        errorMessage = `–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${error.message}`;
      }
      
      throw new Error(errorMessage);
    } finally {
      this.isProcessing = false;
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö PDF —Ñ–∞–π–ª–æ–≤
   */
  async createMockFiles(caseNumber) {
    const downloadedFiles = [];
    const sanitizedCaseNumber = this.sanitizeFilename(caseNumber);

    try {
      // –°–æ–∑–¥–∞–µ–º 2 —Ç–µ—Å—Ç–æ–≤—ã—Ö PDF —Ñ–∞–π–ª–∞
      const mockDocuments = [
        {
          name: `–†–µ—à–µ–Ω–∏–µ —Å—É–¥–∞ –ø–æ –¥–µ–ª—É ${caseNumber}`,
          type: '–†–µ—à–µ–Ω–∏–µ'
        },
        {
          name: `–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–¥–∞ –ø–æ –¥–µ–ª—É ${caseNumber}`,
          type: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
        }
      ];

      for (let i = 0; i < mockDocuments.length; i++) {
        const doc = mockDocuments[i];
        
        try {
          if (this.progressCallback) {
            this.progressCallback(`–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ ${i + 1} –∏–∑ ${mockDocuments.length}...`);
          }

          console.log(`üì• –°–æ–∑–¥–∞–Ω–∏–µ: ${doc.name}`);

          // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
          const timestamp = new Date().toISOString().split('T')[0];
          const filename = `${sanitizedCaseNumber}_${timestamp}_${i + 1}_${this.sanitizeFilename(doc.name)}.pdf`;

          // –°–æ–∑–¥–∞–µ–º PDF —Ñ–∞–π–ª
          const pdfBlob = await this.createPdfFile(doc.name, caseNumber, i + 1, doc.type);
          
          if (!pdfBlob || pdfBlob.size === 0) {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å PDF —Ñ–∞–π–ª: ${doc.name}`);
          }
          
          // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
          const downloadUrl = URL.createObjectURL(pdfBlob);
          if (!downloadUrl) {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: ${doc.name}`);
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
          const fileData = {
            name: filename,
            blob: pdfBlob,
            url: downloadUrl,
            size: pdfBlob.size,
            type: 'application/pdf'
          };
          
          downloadedFiles.push(fileData);
          console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${filename}`);

          // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤
          await this.delay(500);

        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ ${doc.name}:`, error);
          throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ "${doc.name}": ${error.message}`);
        }
      }

      return downloadedFiles;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ createMockFiles:', error);
      throw error;
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–∞
   */
  async createPdfFile(documentName, caseNumber, index, documentType = '–î–æ–∫—É–º–µ–Ω—Ç') {
    try {
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π PDF —Ñ–∞–π–ª
      const pdfContent = this.generatePdfContent(documentName, caseNumber, index, documentType);
      
      if (!pdfContent || pdfContent.length === 0) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF —Ñ–∞–π–ª–∞');
      }
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ Blob
      const pdfBlob = new Blob([pdfContent], { type: 'application/pdf' });
      
      if (!pdfBlob || pdfBlob.size === 0) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Blob –æ–±—ä–µ–∫—Ç –¥–ª—è PDF —Ñ–∞–π–ª–∞');
      }
      
      return pdfBlob;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–∞:', error);
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–∞: ${error.message}`);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ PDF —Ñ–∞–π–ª–∞
   */
  generatePdfContent(documentName, caseNumber, index, documentType) {
    try {
      const timestamp = new Date().toLocaleString('ru-RU');
      
      // –ü—Ä–æ—Å—Ç–æ–π PDF –∫–æ–Ω—Ç–µ–Ω—Ç
      const pdfContent = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj

2 0 obj
<<
/Type /Pages
/Kids [3 0 R]
/Count 1
>>
endobj

3 0 obj
<<
/Type /Page
/Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
/Resources <<
  /Font <<
    /F1 5 0 R
  >>
>>
>>
endobj

4 0 obj
<<
/Length 300
>>
stream
BT
/F1 14 Tf
72 750 Td
(–ê–†–ë–ò–¢–†–ê–ñ–ù–´–ô –°–£–î) Tj
0 -30 Td
/F1 12 Tf
72 720 Td
(${documentType}) Tj
0 -25 Td
72 695 Td
(–î–µ–ª–æ: ${caseNumber}) Tj
0 -20 Td
72 675 Td
(–î–æ–∫—É–º–µ–Ω—Ç ‚Ññ${index}) Tj
0 -20 Td
72 655 Td
(–î–∞—Ç–∞: ${timestamp}) Tj
0 -40 Td
72 615 Td
(–î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏) Tj
0 -20 Td
72 595 Td
(–ø–∞—Ä—Å–µ—Ä–æ–º kad.arbitr.ru) Tj
0 -40 Td
72 555 Td
(–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Ñ–∞–π–ª) Tj
0 -20 Td
72 535 Td
(–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã) Tj
0 -20 Td
72 515 Td
(–ø–∞—Ä—Å–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤) Tj
0 -40 Td
72 475 Td
(–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: ${documentName}) Tj
ET
endstream
endobj

5 0 obj
<<
/Type /Font
/Subtype /Type1
/BaseFont /Helvetica
>>
endobj

xref
0 6
0000000000 65535 f 
0000000009 00000 n 
0000000058 00000 n 
0000000115 00000 n 
0000000204 00000 n 
0000000550 00000 n 
trailer
<<
/Size 6
/Root 1 0 R
>>
startxref
900
%%EOF`;

      return pdfContent;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`);
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
   */
  sanitizeFilename(filename) {
    if (!filename || typeof filename !== 'string') {
      return 'unknown_file';
    }
    
    return filename
      .replace(/[<>:"/\\|?*]/g, '_')
      .replace(/\s+/g, '_')
      .substring(0, 100);
  }

  /**
   * –ó–∞–¥–µ—Ä–∂–∫–∞
   */
  delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
   */
  getDownloadedFiles() {
    return this.downloadedFiles;
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
   */
  clearFiles() {
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º URL –æ–±—ä–µ–∫—Ç—ã
    this.downloadedFiles.forEach(file => {
      if (file.url) {
        URL.revokeObjectURL(file.url);
      }
    });
    
    this.downloadedFiles = [];
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.ClientKadArbitrParser = ClientKadArbitrParser;
#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ kad.arbitr.ru —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 */

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs-extra');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ kad.arbitr.ru (JavaScript –≤–µ—Ä—Å–∏—è)');
console.log('=' * 60);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js
const nodeVersion = process.version;
console.log(`üì¶ Node.js –≤–µ—Ä—Å–∏—è: ${nodeVersion}`);

if (parseInt(nodeVersion.slice(1).split('.')[0]) < 16) {
  console.error('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 16.0.0 –∏–ª–∏ –≤—ã—à–µ');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
if (!fs.existsSync(path.join(__dirname, 'package.json'))) {
  console.error('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
const filesDir = path.join(__dirname, 'files');
fs.ensureDirSync(filesDir);
console.log('‚úÖ –ü–∞–ø–∫–∞ files —Å–æ–∑–¥–∞–Ω–∞');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
try {
  require('express');
  require('puppeteer');
  require('socket.io');
  console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã');
} catch (error) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:', error.message);
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
  process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
console.log('üåü –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...');
console.log(`üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000`);
console.log(`‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C`);
console.log('=' * 60);

// –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
setTimeout(() => {
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    const server = spawn('node', ['server.js'], {
      cwd: __dirname,
      stdio: 'inherit',
      shell: true
    });
    
    server.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    });
    
    server.on('close', (code) => {
      console.log(`\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
    process.on('SIGINT', () => {
      console.log('\n\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
      console.log('üëã –ü–∞—Ä—Å–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      server.kill('SIGINT');
      process.exit(0);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error);
    process.exit(1);
  }
}, 1000);

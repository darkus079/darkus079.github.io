const fs = require('fs');
const path = require('path');
const express = require('express');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
const testFileName = '–ê84-4753_2024_20251006_151647_1_Test_Document.pdf';
const testFilePath = path.join(__dirname, 'files', testFileName);

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É files –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const filesDir = path.join(__dirname, 'files');
if (!fs.existsSync(filesDir)) {
    fs.mkdirSync(filesDir, { recursive: true });
}

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
const testContent = '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Ñ–∞–π–ª —Å –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ –∏–º–µ–Ω–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π';
fs.writeFileSync(testFilePath, testContent);

console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:', testFilePath);
console.log('üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:', fs.statSync(testFilePath).size, '–±–∞–π—Ç');

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const app = express();

app.get('/api/files', (req, res) => {
    try {
        const files = fs.readdirSync(filesDir).filter(file => {
            const filePath = path.join(filesDir, file);
            return fs.statSync(filePath).isFile();
        });
        console.log('üìÅ API /api/files - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª—ã:', files);
        res.json({ files });
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error);
        res.json({ files: [] });
    }
});

app.get('/api/download/:filename', (req, res) => {
    const filename = decodeURIComponent(req.params.filename);
    const filePath = path.join(filesDir, filename);
    
    console.log(`üîç –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: ${filename}`);
    console.log(`üìÅ –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: ${filePath}`);
    
    if (!fs.existsSync(filePath)) {
        console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
        return res.status(404).json({ message: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    }
    
    console.log(`‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: ${filename}`);
    res.download(filePath, filename);
});

app.get('/api/file-info/:filename', (req, res) => {
    const filename = decodeURIComponent(req.params.filename);
    const filePath = path.join(filesDir, filename);
    
    console.log(`‚ÑπÔ∏è –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ: ${filename}`);
    
    if (!fs.existsSync(filePath)) {
        console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
        return res.status(404).json({ message: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    }
    
    const stats = fs.statSync(filePath);
    const info = {
        name: filename,
        size: stats.size,
        created: stats.birthtime.toISOString(),
        modified: stats.mtime.toISOString()
    };
    
    console.log(`‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:`, info);
    res.json(info);
});

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
async function testAPI() {
    const baseUrl = 'http://localhost:3002';
    
    try {
        console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...');
        
        // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
        console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /api/files');
        const filesResponse = await fetch(`${baseUrl}/api/files`);
        const filesData = await filesResponse.json();
        console.log('üìÅ –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤:', filesData);
        
        if (filesData.files && filesData.files.length > 0) {
            const testFile = filesData.files[0];
            console.log('üìÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª:', testFile, '—Ç–∏–ø:', typeof testFile);
            
            // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
            console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /api/file-info');
            const infoResponse = await fetch(`${baseUrl}/api/file-info/${encodeURIComponent(testFile)}`);
            if (infoResponse.ok) {
                const infoData = await infoResponse.json();
                console.log('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:', infoData);
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ');
            }
            
            // –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è');
            const downloadUrl = `${baseUrl}/api/download/${encodeURIComponent(testFile)}`;
            console.log('üîó URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', downloadUrl);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç [object Object]
            if (downloadUrl.includes('[object Object]') || downloadUrl.includes('%5Bobject%20Object%5D')) {
                console.log('‚ùå –û–®–ò–ë–ö–ê: URL —Å–æ–¥–µ—Ä–∂–∏—Ç [object Object]');
            } else {
                console.log('‚úÖ URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error);
    }
}

const PORT = 3002;
app.listen(PORT, () => {
    console.log(`üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì± –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:${PORT}/api/files`);
    console.log(`üì• –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: http://localhost:${PORT}/api/download/${encodeURIComponent(testFileName)}`);
    console.log(`‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ: http://localhost:${PORT}/api/file-info/${encodeURIComponent(testFileName)}`);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(testAPI, 2000);
});
